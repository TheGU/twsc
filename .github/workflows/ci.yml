name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-ibapi-1030-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-ibapi-1030-
          ${{ runner.os }}-pip-
    
    - name: Install latest ibapi from source
      run: |
        echo "Downloading TWS API package..."
        wget -q https://interactivebrokers.github.io/downloads/twsapi_macunix.1030.01.zip
        echo "Extracting package..."
        unzip -q twsapi_macunix.1030.01.zip
        echo "Installing ibapi..."
        cd IBJts/source/pythonclient
        python setup.py install --quiet
        cd ../../..
        echo "Cleaning up..."
        rm -rf IBJts twsapi_macunix.1030.01.zip
        echo "Verifying ibapi installation..."
        python -c "import ibapi; print('✅ ibapi installed successfully')"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements.txt
    
    - name: Lint with flake8
      run: |
        flake8 twsc --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 twsc --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
    
    - name: Type check with mypy
      run: |
        mypy twsc
    
    - name: Format check with black
      run: |
        black --check twsc
    
    - name: Validate package structure
      run: |
        python -c "import twsc; print('Package import successful')"
        python -c "from twsc.client import TWS; print('TWS class import successful')" || echo "TWS class not found, continuing..."
    
    - name: Run basic tests
      run: |
        python -m pytest tests/test_basic.py -v
    
    - name: Verify ibapi integration
      run: |
        python -c "from ibapi.client import EClient; from ibapi.wrapper import EWrapper; print('✅ ibapi classes imported successfully')"
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.12'
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt tests/requirements.txt

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install latest ibapi from source
      run: |
        echo "Downloading TWS API package..."
        wget -q https://interactivebrokers.github.io/downloads/twsapi_macunix.1030.01.zip
        echo "Extracting package..."
        unzip -q twsapi_macunix.1030.01.zip
        echo "Installing ibapi..."
        cd IBJts/source/pythonclient
        python setup.py install --quiet
        cd ../../..
        echo "Cleaning up..."
        rm -rf IBJts twsapi_macunix.1030.01.zip
        echo "Verifying ibapi installation..."
        python -c "import ibapi; print('✅ ibapi installed successfully')"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Install project dependencies for build test
      run: |
        pip install -r requirements.txt
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
